[{"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/index.js":"1","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/reportWebVitals.js":"2","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/pwa/serviceWorkerRegistration.js":"3","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/store.js":"4","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/App.jsx":"5","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/routes.js":"6","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/actions/shopActions.js":"7","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/AppHeader.jsx":"8","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/DynamicDialog.jsx":"9","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/MainNavBar.jsx":"10","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/index.js":"11","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/settings.js":"12","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/shopService.js":"13","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Avatar.jsx":"14","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/pages/Home.jsx":"15","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/pages/Products.jsx":"16","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/TagsEditModal.jsx":"17","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/SingleSelectPopover.jsx":"18","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/appReducer.js":"19","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/shopReducer.js":"20","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/reviewReducer.js":"21","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/productReducer.js":"22","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/userReducer.js":"23","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/asyncStorageService.js":"24","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/httpService.js":"25","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/actions/productActions.js":"26","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/actions/appActions.js":"27","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/utilService.js":"28","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/settings/productSettings.js":"29","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/hooks/useSelection.js":"30","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/hooks/customHooks.js":"31","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataViewAndActions.jsx":"32","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataFilter.jsx":"33","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/PageSwapper.jsx":"34","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataNav.jsx":"35","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Snippet.jsx":"36","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/BaseModal.jsx":"37","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/FormSingleSelect.jsx":"38","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/BasePopover.jsx":"39","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/productService.js":"40","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataPreview.jsx":"41","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/FilterDialog.jsx":"42","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DynamicDataActions.jsx":"43","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataLoader.jsx":"44","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/FilterSnippets.jsx":"45","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Accordion.jsx":"46","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/ProductViewActions.jsx":"47","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/ProductPreview.jsx":"48","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/CommonDataActions.jsx":"49","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/StatusWidget.jsx":"50"},{"size":914,"mtime":1625404844485,"results":"51","hashOfConfig":"52"},{"size":364,"mtime":1625404804301,"results":"53","hashOfConfig":"52"},{"size":5064,"mtime":1625404836281,"results":"54","hashOfConfig":"52"},{"size":323,"mtime":1609063992000,"results":"55","hashOfConfig":"52"},{"size":978,"mtime":1628351074127,"results":"56","hashOfConfig":"52"},{"size":256,"mtime":1625492408819,"results":"57","hashOfConfig":"52"},{"size":414,"mtime":1627993294881,"results":"58","hashOfConfig":"52"},{"size":1230,"mtime":1628004156170,"results":"59","hashOfConfig":"52"},{"size":575,"mtime":1629023348658,"results":"60","hashOfConfig":"52"},{"size":1145,"mtime":1628004414504,"results":"61","hashOfConfig":"52"},{"size":469,"mtime":1627914153768,"results":"62","hashOfConfig":"52"},{"size":400,"mtime":1629122873562,"results":"63","hashOfConfig":"52"},{"size":1323,"mtime":1627993276772,"results":"64","hashOfConfig":"52"},{"size":296,"mtime":1625574375469,"results":"65","hashOfConfig":"52"},{"size":489,"mtime":1625492298775,"results":"66","hashOfConfig":"52"},{"size":2735,"mtime":1630834927456,"results":"67","hashOfConfig":"52"},{"size":2139,"mtime":1629130937343,"results":"68","hashOfConfig":"52"},{"size":554,"mtime":1629023503485,"results":"69","hashOfConfig":"52"},{"size":803,"mtime":1629129972134,"results":"70","hashOfConfig":"52"},{"size":541,"mtime":1629130051723,"results":"71","hashOfConfig":"52"},{"size":669,"mtime":1609949674000,"results":"72","hashOfConfig":"52"},{"size":250,"mtime":1628084343818,"results":"73","hashOfConfig":"52"},{"size":737,"mtime":1609752012000,"results":"74","hashOfConfig":"52"},{"size":4509,"mtime":1629015764268,"results":"75","hashOfConfig":"52"},{"size":1219,"mtime":1629126100898,"results":"76","hashOfConfig":"52"},{"size":995,"mtime":1629124994873,"results":"77","hashOfConfig":"52"},{"size":1058,"mtime":1629130049827,"results":"78","hashOfConfig":"52"},{"size":1175,"mtime":1629038101072,"results":"79","hashOfConfig":"52"},{"size":437,"mtime":1629124029403,"results":"80","hashOfConfig":"52"},{"size":1998,"mtime":1627992955892,"results":"81","hashOfConfig":"52"},{"size":835,"mtime":1628249230759,"results":"82","hashOfConfig":"52"},{"size":3050,"mtime":1656666910489,"results":"83","hashOfConfig":"52"},{"size":3307,"mtime":1630834924288,"results":"84","hashOfConfig":"52"},{"size":499,"mtime":1629126367339,"results":"85","hashOfConfig":"52"},{"size":1128,"mtime":1628440350629,"results":"86","hashOfConfig":"52"},{"size":277,"mtime":1628274036609,"results":"87","hashOfConfig":"52"},{"size":1101,"mtime":1630839672878,"results":"88","hashOfConfig":"52"},{"size":1015,"mtime":1629024980784,"results":"89","hashOfConfig":"52"},{"size":1259,"mtime":1628352677714,"results":"90","hashOfConfig":"52"},{"size":2856,"mtime":1629128645048,"results":"91","hashOfConfig":"52"},{"size":329,"mtime":1629122782655,"results":"92","hashOfConfig":"52"},{"size":1462,"mtime":1628338238929,"results":"93","hashOfConfig":"52"},{"size":365,"mtime":1629130499633,"results":"94","hashOfConfig":"52"},{"size":688,"mtime":1628439043850,"results":"95","hashOfConfig":"52"},{"size":425,"mtime":1629127481093,"results":"96","hashOfConfig":"52"},{"size":1152,"mtime":1629024919154,"results":"97","hashOfConfig":"52"},{"size":1724,"mtime":1629133969913,"results":"98","hashOfConfig":"52"},{"size":1056,"mtime":1626878343399,"results":"99","hashOfConfig":"52"},{"size":1745,"mtime":1629130800520,"results":"100","hashOfConfig":"52"},{"size":735,"mtime":1628004487984,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"nkzbjg",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/index.js",[],["215","216"],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/reportWebVitals.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/pwa/serviceWorkerRegistration.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/store.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/App.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/routes.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/actions/shopActions.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/AppHeader.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/DynamicDialog.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/MainNavBar.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/index.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/settings.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/shopService.js",["217","218"],"import { storageService } from './asyncStorageService'\nimport { httpService } from './httpService'\n\nexport const shopService = {\n    addTagsToEntities,\n    removeTagsFromEntities,\n    getShopById,\n\n}\n\nfunction addTagsToEntities(tagsToAdd, entities) {\n    tagsToAdd.forEach(tag => {\n        for (let id in entities) {\n            const tagsInEntity = entities[id].tags\n            if (!tagsInEntity.includes(tag)) tagsInEntity.push(tag)\n        }\n    })\n}\nfunction removeTagsFromEntities(tagsToRemove, entities) {\n    tagsToRemove.forEach(tag => {\n        for (let id in entities) {\n            const tagsInEntity = entities[id].tags\n            const idx= tagsInEntity.findIndex(tagInEntity=>tagInEntity===tag)\n            if(idx!=-1) tagsInEntity.splice(idx,1)\n        }\n    })\n}\n\nasync function getShopById(shopId) {\n    try {\n        // return await httpService.get(`product/${productId}`)\n        return await storageService.get('shop', shopId)\n    } catch (err) {\n        throw err\n    }\n}\n\nexport function getEmptyShop() {\n    return {\n        domains: [],\n        title: undefined,\n        productTypes: [],\n        vendors: [],\n        suppliers: [{\n            id: undefined,\n            name: undefined,\n        }],\n        productTags: [String],\n        orderTags:[String],\n        customerTags:[String]\n    }\n}\n","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Avatar.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/pages/Home.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/pages/Products.jsx",["219","220","221","222","223"],"import { useEffect, useLayoutEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataFilter } from \"../cmps/DataFilter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadProducts } from \"../store/actions/productActions\";\nimport { statusNames } from \"../services/settings\";\nimport { DataViewAndActions } from \"../cmps/DataViewAndActions\";\nimport { DataNav } from \"../cmps/DataNav\";\nimport { useHistory, useLocation } from 'react-router';\nimport queryString from 'query-string'\nimport { PageSwapper } from \"../cmps/PageSwapper\";\nimport { PRODUCTS_SORT_LAYOUT, PRODUCT_TYPE } from \"../services/settings/productSettings\";\nimport { updateCriteria } from \"../store/actions/appActions\";\n\nexport function ProductsPage() {\n    const dispatch = useDispatch()\n    const { products } = useSelector(state => state.productModule)\n    const { productTags, productTypes, vendors } = useSelector(state => state.shopModule)\n    const {criteria}=useSelector(state=>state.appModule)\n    const [page, setPage] = useState(0)\n\n    useEffect(() => {\n        dispatch(loadProducts(criteria))\n    }, [criteria])\n\n    useLayoutEffect(() => {\n        onSetFilter({ skip: page * 25 })\n    }, [page])\n\n    const onSetFilter = (filter) => {\n        dispatch(updateCriteria(filter))\n    }\n    const onSwapPage = (diff) => {\n        setPage(page+diff)\n    }\n\n    const productViewLayout =\n        ['', 'product', 'status', 'inventory', 'type', 'vendor']\n\n    const filterData = [\n        {\n            typeTitle: 'Product Vendor',\n            type: 'vendor',\n            options: vendors\n        },\n        {\n            typeTitle: 'Tag',\n            type: 'tags',\n            options: productTags\n        },\n        {\n            typeTitle: 'Status',\n            type: 'status',\n            options: [statusNames.active, statusNames.archive, statusNames.draft]\n        },\n        {\n            typeTitle: 'Product Type',\n            type: 'type',\n            options: productTypes\n        }\n\n    ]\n\n    return <div className=\"products-page\">\n        <div className=\"page-header flex justify-space-between align-center\">\n            <h1 className=\"fs20\">Products</h1>\n            <Link to=\"#\" className=\"btn-md btn-primary\">Add product</Link>\n        </div>\n        <div className=\"page-surface\">\n            <DataNav data={filterData[2]} baseUrl=\"products\" />\n            <DataFilter cbAfterFilter={onSetFilter} filterData={filterData} sortData={PRODUCTS_SORT_LAYOUT} />\n            <DataViewAndActions data={products} type={PRODUCT_TYPE} viewLayout={productViewLayout} cbAfterFilter={onSetFilter} />\n            <PageSwapper page={page} last={products.length < 25} onSwap={onSwapPage} />\n        </div>\n    </div>\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/TagsEditModal.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/SingleSelectPopover.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/appReducer.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/shopReducer.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/reviewReducer.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/productReducer.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/reducers/userReducer.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/asyncStorageService.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/httpService.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/actions/productActions.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/store/actions/appActions.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/utilService.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/settings/productSettings.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/hooks/useSelection.js",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/hooks/customHooks.js",["224","225","226"],"import { useEffect, useState, useRef, useLayoutEffect } from 'react'\r\n\r\nexport const useForm = (initialState, cb = () => { }) => {\r\n  const [fields, setFields] = useState(initialState)\r\n  const [isFormEmpty, setFormEmptyStatus] = useState(true)\r\n  useEffect(() => {\r\n    cb(fields)\r\n  }, [fields])\r\n\r\n  useLayoutEffect(() => {\r\n    updateEmptyStatus()\r\n  }, [fields])\r\n\r\n  const updateEmptyStatus = () => {\r\n    const fieldsVals = Object.values(fields)\r\n    const isEmpty = !fieldsVals.some(value => !!value)\r\n    setFormEmptyStatus(isEmpty)\r\n  }\r\n\r\n  return [\r\n    fields,\r\n    function (ev) {\r\n      const field = ev.target.name\r\n      const value = (ev.target.type === 'number') ? +ev.target.value : ev.target.value\r\n      setFields(prevFields => ({ ...prevFields, [field]: value }))\r\n    },\r\n    setFields,\r\n    isFormEmpty\r\n  ]\r\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataViewAndActions.jsx",["227","228"],"import { DataPreview } from \"./DataPreview\"\nimport Checkbox from '@mui/material/Checkbox';\nimport { DynamicDataActions } from \"./DynamicDataActions\";\nimport { utilService } from \"../services/utilService\";\nimport { useSelection } from '../services/hooks/useSelection'\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setGlobalSelected } from \"../store/actions/appActions\";\nimport { useRef } from \"react\";\nexport const DataViewAndActions = ({ data, type, viewLayout,sort }) => {\n    const dispatch = useDispatch()\n    const { systemSelectedData } = useSelector(state => state.appModule)\n    const [selectedData, handleSelection, toggleSelection] = useSelection({ ...systemSelectedData })\n    const selectedCount = useRef(null)\n\n    useEffect(() => {\n        dispatch(setGlobalSelected(selectedData))\n        selectedCount.current = getMapItemCount(selectedData)\n    }, [selectedData])\n\n    useEffect(() => {\n        if (getMapItemCount(systemSelectedData) !== selectedCount.current) {\n            selectedCount.current = 0\n            toggleSelection([])\n        }\n    }, [systemSelectedData])\n\n    const getMapItemCount = (map) => {\n        return Object.keys(map).length\n    }\n\n    const checkIsSelected = (entity) => {\n        return !!selectedData[entity._id]\n    }\n    const toggleSelectAll = () => {\n        toggleSelection(data)\n    }\n\n    const selectedModeClass = selectedCount.current ? 'selected-mode' : ''\n\n    const ViewCheckBox = () => {\n        return <Checkbox className=\"select\" checked={!!selectedCount.current}\n            onChange={toggleSelectAll} inputProps={{ 'aria-label': 'secondary checkbox' }} />\n    } \n    return (<div className=\"data-view-actions\">\n        <div className={`data-actions-wrapper ${selectedModeClass}`} >\n            <div className=\"flex btn-bar\">\n                <button className=\" btn-md btn-neutral relative\">\n                    <ViewCheckBox />\n                    <span> <span className=\"count\">{selectedCount.current}</span> selected</span>\n                </button>\n                <DynamicDataActions type={type} data={systemSelectedData} />\n            </div>\n        </div>\n\n        <div className=\"table-container\">\n            <table className={selectedModeClass}>\n                <thead >\n                    <tr className=\"header\">\n                        <th><ViewCheckBox /></th>\n                        {viewLayout.map(title=> <th key={utilService.makeId()}>{title}</th>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map(dataEntity => {\n                        return <DataPreview entity={dataEntity} type={type} key={dataEntity._id}\n                            isSelected={checkIsSelected(dataEntity)} handleChange={() => handleSelection(dataEntity)} />\n                    })}\n                    {!data.length&&\n                    <tr><td>No data to display...</td></tr>\n                    }\n                </tbody>\n            </table>\n        </div>\n    </div>\n    )\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataFilter.jsx",["229","230","231"],"\nimport { useEffect, useState } from 'react';\nimport { useForm } from '../services/hooks/customHooks';\nimport { Snippet } from './Snippet';\nimport { FilterDialog } from './FilterDialog'\nimport { utilService } from '../services/utilService';\nimport { useDispatch } from 'react-redux';\nimport { openDialog } from '../store/actions/appActions';\nimport { SINGLE_SELECT_POPOVER } from '../services/settings';\nimport { useHistory, useLocation } from 'react-router';\nimport { DataLoader } from './DataLoader';\nimport SearchIcon from '@mui/icons-material/Search';\nimport queryString from 'query-string'\nimport { FilterSnippets } from './FilterSnippets';\n\nexport const DataFilter = ({ filterData, cbAfterFilter, sortData }) => {\n\n    const dispatch = useDispatch()\n    const [isDialogOpen, setDialog] = useState(false)\n    const [filter, handleChange, setFilter, isFilterEmpty] = useForm(buildEmptyFilter(), cbAfterFilter)\n    const location = useLocation()\n    useEffect(() => {\n        updateFilterToParams()\n    }, [location])\n\n    const updateFilterToParams = () => {\n        const filterQuery = queryString.parse(location.search)\n        if (filterQuery.status === 'all') filterQuery.status = ''\n        setFilter(prevFields => ({ ...prevFields, ...filterQuery }))\n    }\n\n    const resetFilter = (type = undefined) => {\n        !type ? setFilter(buildEmptyFilter()) :\n            setFilter(prevFields => ({ ...prevFields, [type]: '' }))\n    }\n\n    const closeDialog = () => {\n        setDialog(false)\n    }\n\n    const onOpenPopover = (ev, filterItem) => {\n        const props = {\n            handleChange,\n            form: filter,\n            formItem: filterItem,\n            elPos: ev.target.getBoundingClientRect()\n        }\n        dispatch(openDialog(SINGLE_SELECT_POPOVER, props))\n    }\n\n    function buildEmptyFilter() {\n        const emptyFilter = filterData.reduce((acc, filterOption) => {\n            acc[filterOption.type] = ''\n            return acc\n        }, {})\n        return emptyFilter\n    }\n\n    return <>\n        <div className=\"data-filter\">\n            <div className=\"flex filter-preview\">\n                <div className=\"search-container flex\">\n                    <SearchIcon />\n                    <input type=\"text\" placeholder=\"Search...\" name=\"term\" value={filter.term || ''} onChange={handleChange} />\n                </div>\n                <div className=\"flex btn-bar\">\n                    {filterData.slice(0, 3).map(item => {\n                        return <button key={utilService.makeId()} onClick={(ev) => onOpenPopover(ev, item)}\n                            className=\"btn-md btn-neutral\">{item.typeTitle}</button>\n                    })}\n                    <button onClick={() => setDialog(true)}\n                        className=\"btn-md btn-neutral\">More Filters</button>\n                </div>\n                <button onClick={(ev) => onOpenPopover(ev, sortData)} className=\"btn-md btn-neutral\"> Sort</button>\n            </div>\n            <DataLoader />\n            <FilterSnippets filterData={filterData} filter={filter} resetFilter={resetFilter} />\n        </div>\n        <FilterDialog data={filterData} filter={filter} hide={closeDialog} isEmpty={isFilterEmpty}\n            isOpen={isDialogOpen} resetFilter={resetFilter} handleChange={handleChange} />\n    </>\n} ","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/PageSwapper.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataNav.jsx",["232"],"import { useLayoutEffect,useState } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport { utilService } from '../services/utilService'\n\nexport const DataNav = ({ baseUrl, data }) => {\n    const [selectedParam, setSelected] = useState('')\n    const location = useLocation()\n    useLayoutEffect(() => {\n        const param = getParamFromQuery()\n        setSelected(param)\n    }, [location])\n\n    const getParamFromQuery = () => {\n        const startIdx = location.search.indexOf('=')\n        if (startIdx === -1) return ''\n        const queryParam = location.search.substring(startIdx + 1)\n        return queryParam\n    }\n\n    return <nav className=\"data-nav\">\n        <NavLink exact={true} to={`/${baseUrl}?${data.type}=all`} activeClassName={selectedParam==='all' ? 'active' : ''} >\n            <span>All</span> </NavLink>\n        {data.options.map((option) => {\n            return <NavLink exact={true} to={`/${baseUrl}?${data.type}=${option}`}\n                activeClassName={selectedParam === option ? 'active' : ''} key={utilService.makeId()}><span>{option}</span></NavLink>\n        })}\n    </nav>\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Snippet.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/BaseModal.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/FormSingleSelect.jsx",["233"],"import Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { utilService } from '../services/utilService';\nexport const FormSingleSelect = ({ formItem, form, handleChange }) => {\n    \n    if(!formItem) return <span>''</span>\n    const getTitle=(idx)=>{\n        const {titles,options}=formItem\n        if(titles&&titles[idx]) return titles[idx]\n        else return options[idx]\n \n    }\n\n    return <div className=\"form-selection\">\n\n        <RadioGroup name={formItem?.type} value={form[formItem?.type]||''} \n        onChange={handleChange}>\n            {formItem.options.map((option,idx) => {\n                return <FormControlLabel value={option} control={<Radio />} label={getTitle(idx)} />\n            })}\n            <FormControlLabel className={`clear ${form[formItem.type] ? 'active' : ''}`}\n                value={''} control={<Radio />} label={'Clear'} />\n        </RadioGroup>\n    </div>\n\n\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Dialogs/BasePopover.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/services/productService.js",["234"],"\nimport { httpService } from './httpService'\nimport axios from 'axios'\nimport { storageService } from './asyncStorageService'\nimport { statusNames } from './settings'\nimport { utilService } from './utilService'\n\nexport const productService = {\n    queryProducts,\n    removeProductById,\n    removeManyProductsById,\n    getProductById,\n    saveProduct,\n    patchProducts,\n    getEmptyProduct,\n    getProductsFilter,\n}\n\nasync function saveProduct(product) {\n    try {\n        return await product._id ? _updateProduct(product) : _createProduct(product)\n    } catch (e) {\n        throw (e)\n    }\n}\n\nasync function queryProducts(filterBy) {\n    const query=utilService.buildQueryStr(filterBy)\n    console.log('query is:', query)\n    try {\n        return await httpService.get(`products${query}`)\n        // return await storageService.query('product')\n    } catch (err) {\n        throw err\n    }\n}\nasync function getProductById(productId) {\n    try {\n        // return await httpService.get(`product/${productId}`)\n        return await storageService.get('product', productId)\n    } catch (err) {\n        throw err\n    }\n}\n\nasync function patchProducts(patch) {\n    try {\n        return await httpService.patch('products', patch)\n        // return await axios.patch('//localhost:3030/api/products',patch)\n        // return await storageService.putMany('product', products)\n    } catch (err) {\n        throw err\n    }\n}\nasync function removeProductById(productId) {\n    try {\n        // await httpService.delete(`product/${productId}`)\n        await storageService.remove('product', productId)\n    } catch (err) {\n        throw err\n    }\n}\n\nasync function removeManyProductsById(productIds) {\n    try {\n        await httpService.delete(`products`,productIds)\n        // await storageService.removeMany(`product`, productIds)\n    } catch (err) {\n        throw err\n    }\n}\n\n\n\nasync function _updateProduct(product) {\n    // return await httpService.put(`product/${product._id}`, product)\n    return await storageService.put('product', product)\n\n}\nasync function _createProduct(product) {\n    // return await httpService.post('product', product)\n    return await storageService.post('product', product)\n}\n\n\n\nfunction getEmptyProduct() {\n    return {\n        status: statusNames.active,\n        title: '',\n        description: '',\n        type: '',\n        vendor: '',\n        tagMap: {},\n        imgUrls: [],\n        price: null,\n        comparePrice: null,\n        cost: null,\n        sku: '',\n        inventory: null,\n        supplier: {\n            name: '',\n            _id: ''\n        },\n        weight: {\n            value: null,\n            unit: ''\n        },\n        origin: ''\n    }\n}\nfunction getProductsFilter() {\n    return {\n        vendor: '',\n        tag: '',\n        status: '',\n        type: '',\n        collection: '',\n        title:''\n    }\n}\n\n\n","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataPreview.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/FilterDialog.jsx",["235"],"import IconClose from '@mui/icons-material/Clear';\nimport { useEffect, useState } from 'react';\nimport { Accordion } from './Accordion'\n\nexport const FilterDialog = ({ filter, isOpen, hide, resetFilter, data, handleChange, isEmpty }) => {\n    const UNSET_IDX = -1;\n    const [selectedItem, setAccordionItem] = useState(UNSET_IDX)\n\n    useEffect(() => {\n        if (!isOpen) setAccordionItem(UNSET_IDX)\n    }, [isOpen])\n\n    const onItemSelect = (idx) => {\n        const selectedIdx = selectedItem === idx ? UNSET_IDX : idx\n        setAccordionItem(selectedIdx)\n    }\n\n    const expandClass = isOpen ? 'expand' : ''\n    return <>\n        <div onClick={hide} className={`overlay ${expandClass}`}></div>\n        <div className={`more-filters ${expandClass}`}>\n            <h2 className=\"flex justify-space-between\">More Filters <span onClick={hide}><IconClose /></span></h2>\n            <hr />\n            <div className=\"body\">\n                <Accordion data={data} filter={filter} onSelect={onItemSelect} \n                handleChange={handleChange} selectedItem={selectedItem} />\n            </div>\n            <hr />\n            <div className=\"flex justify-space-between footer\">\n                <button className='btn-md btn-neutral' onClick={(ev) => resetFilter()}\n                    disabled={isEmpty}>Clear all filters</button>\n                <button className=\"btn-md btn-primary\" onClick={hide}>Done</button>\n            </div>\n        </div>\n    </>\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DynamicDataActions.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/DataLoader.jsx",["236"],"import React, { useLayoutEffect } from 'react'\nimport { ReactComponent as Loader } from '../assets/img/icons/dataLoader.svg'\nimport { useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nexport const DataLoader = () => {\n    const { isLoading } = useSelector(state => state.appModule)\n    const [showClass, setShowClass] = useState('')\n    useLayoutEffect(() => {\n        const className = isLoading ? 'show slide' : ''\n        setShowClass(className)\n    }, [isLoading])\n    return <div className={`data-loader flex ${showClass}`}>\n        <div className=\"flex  align-center\">\n            <Loader />\n            <span>Loading...</span>\n        </div>\n    </div>\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/FilterSnippets.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/Accordion.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/ProductViewActions.jsx",["237"],"import { useDispatch, useSelector } from \"react-redux\"\nimport { loadProducts, removeManyProducts, patchProducts } from \"../store/actions/productActions\"\nimport {  statusNames } from '../services/settings'\nimport { closeDialog} from \"../store/actions/appActions\"\nimport { shopService } from \"../services/shopService\"\nimport { CommonDataActions } from \"./CommonDataActions\"\n\nexport const ProductViewActions = ({ productsMap }) => {\n    const dispatch = useDispatch()\n    const { criteria } = useSelector(state => state.appModule)\n    const {productTags} = useSelector(state => state.shopModule)\n    \n    const removeProducts = async () => {\n        const productIds = Object.keys(productsMap)\n        dispatch(removeManyProducts(productIds, cbLoadProductsWithFilter))\n    }\n   \n    const editStatus = async (statusName) => {\n       const patch={\n           ids:Object.keys(productsMap),\n           field:'status',\n           value:statusName\n       }\n        dispatchUpdate(patch)\n        dispatch(closeDialog())\n    }\n\n    const cbLoadProductsWithFilter = () => {\n        return loadProducts(criteria)\n    }\n    const dispatchUpdate = (patch) => {\n        dispatch(patchProducts(patch, cbLoadProductsWithFilter))\n    }\n\n    return (<>\n        <CommonDataActions remove={removeProducts} tagsToShow={productTags} \n        update={dispatchUpdate} entitiesMap={productsMap}/>\n        <button onClick={() => editStatus(statusNames.archive)} className=\"btn-md btn-neutral\">Archive</button>\n        <button onClick={() => editStatus(statusNames.active)} className=\"btn-md btn-neutral\">Set Active</button>\n        <button onClick={() => editStatus(statusNames.draft)} className=\"btn-md btn-neutral\">Set Draft</button>\n    </>\n    )\n}","/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/ProductPreview.jsx",[],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/CommonDataActions.jsx",[],["238","239"],"/Users/raphaelassor/Desktop/DEV/Projects/myShopify/myShopify-app/frontend/src/cmps/StatusWidget.jsx",[],{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":24,"column":19,"nodeType":"250","messageId":"251","endLine":24,"endColumn":21},{"ruleId":"244","severity":1,"message":"252","line":9,"column":10,"nodeType":"246","messageId":"247","endLine":9,"endColumn":20},{"ruleId":"244","severity":1,"message":"253","line":9,"column":22,"nodeType":"246","messageId":"247","endLine":9,"endColumn":33},{"ruleId":"244","severity":1,"message":"254","line":10,"column":8,"nodeType":"246","messageId":"247","endLine":10,"endColumn":19},{"ruleId":"255","severity":1,"message":"256","line":24,"column":8,"nodeType":"257","endLine":24,"endColumn":18,"suggestions":"258"},{"ruleId":"255","severity":1,"message":"259","line":28,"column":8,"nodeType":"257","endLine":28,"endColumn":14,"suggestions":"260"},{"ruleId":"244","severity":1,"message":"261","line":1,"column":31,"nodeType":"246","messageId":"247","endLine":1,"endColumn":37},{"ruleId":"255","severity":1,"message":"262","line":8,"column":6,"nodeType":"257","endLine":8,"endColumn":14,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"264","line":12,"column":6,"nodeType":"257","endLine":12,"endColumn":14,"suggestions":"265"},{"ruleId":"255","severity":1,"message":"256","line":19,"column":8,"nodeType":"257","endLine":19,"endColumn":22,"suggestions":"266"},{"ruleId":"255","severity":1,"message":"267","line":26,"column":8,"nodeType":"257","endLine":26,"endColumn":28,"suggestions":"268"},{"ruleId":"244","severity":1,"message":"269","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":17},{"ruleId":"244","severity":1,"message":"252","line":10,"column":10,"nodeType":"246","messageId":"247","endLine":10,"endColumn":20},{"ruleId":"255","severity":1,"message":"270","line":24,"column":8,"nodeType":"257","endLine":24,"endColumn":18,"suggestions":"271"},{"ruleId":"255","severity":1,"message":"272","line":11,"column":8,"nodeType":"257","endLine":11,"endColumn":18,"suggestions":"273"},{"ruleId":"244","severity":1,"message":"274","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":21},{"ruleId":"244","severity":1,"message":"275","line":3,"column":8,"nodeType":"246","messageId":"247","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"276","line":11,"column":8,"nodeType":"257","endLine":11,"endColumn":16,"suggestions":"277"},{"ruleId":"244","severity":1,"message":"278","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":19},{"ruleId":"244","severity":1,"message":"279","line":5,"column":10,"nodeType":"246","messageId":"247","endLine":5,"endColumn":21},{"ruleId":"240","replacedBy":"280"},{"ruleId":"242","replacedBy":"281"},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'httpService' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'queryString' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["284"],"React Hook useLayoutEffect has a missing dependency: 'onSetFilter'. Either include it or remove the dependency array.",["285"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["286"],"React Hook useLayoutEffect has a missing dependency: 'updateEmptyStatus'. Either include it or remove the dependency array.",["287"],["288"],"React Hook useEffect has a missing dependency: 'toggleSelection'. Either include it or remove the dependency array.",["289"],"'Snippet' is defined but never used.","React Hook useEffect has a missing dependency: 'updateFilterToParams'. Either include it or remove the dependency array.",["290"],"React Hook useLayoutEffect has a missing dependency: 'getParamFromQuery'. Either include it or remove the dependency array.",["291"],"'utilService' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'UNSET_IDX'. Either include it or remove the dependency array.",["292"],"'useEffect' is defined but never used.","'shopService' is defined but never used.",["282"],["283"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [criteria, dispatch]",{"range":"311","text":"312"},"Update the dependencies array to be: [onSetFilter, page]",{"range":"313","text":"314"},"Update the dependencies array to be: [cb, fields]",{"range":"315","text":"316"},"Update the dependencies array to be: [fields, updateEmptyStatus]",{"range":"317","text":"318"},"Update the dependencies array to be: [dispatch, selectedData]",{"range":"319","text":"320"},"Update the dependencies array to be: [systemSelectedData, toggleSelection]",{"range":"321","text":"322"},"Update the dependencies array to be: [location, updateFilterToParams]",{"range":"323","text":"324"},"Update the dependencies array to be: [getParamFromQuery, location]",{"range":"325","text":"326"},"Update the dependencies array to be: [UNSET_IDX, isOpen]",{"range":"327","text":"328"},[1125,1135],"[criteria, dispatch]",[1214,1220],"[onSetFilter, page]",[288,296],"[cb, fields]",[358,366],"[fields, updateEmptyStatus]",[922,936],"[dispatch, selectedData]",[1125,1145],"[systemSelectedData, toggleSelection]",[1008,1018],"[location, updateFilterToParams]",[401,411],"[getParamFromQuery, location]",[408,416],"[UNSET_IDX, isOpen]"]